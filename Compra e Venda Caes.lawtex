<vendedor>
	+[nome] : String {
		name: "Nome do Vendedor"
		request: "Insira a Razão Social do Vendedor"
	},
	+[cnpj] : String where ("\d\d.\d\d\d.\d\d\d/\d\d\d-\d\d") {
		name: CNPJ
		request: "Insira o CNPJ da Empresa (somente números)"
	},
	+[inscricaoEstadual] : Integer {
		name: "Inscrição Estadual"
		request: "Insira a Inscrição Estadual do Vendedor (somente números)"
	},
	+[endereco]
		+[estado] : List ("Acre (AC)", "Alagoas (AL)", "Amazonas (AM)", "Amapá (AP)", "Bahia (BA)", "Ceará (CE)", "Distrito Federal (DF)", "Espírito Santo (ES)", "Goiás (GO)", "Maranhão (MA)", "Mato Grosso (MT)", "Mato Grosso do Sul (MS)", "Minas Gerais (MG)", "Pará (PA)", "Paraíba (PB)", "Paraná (PR)", "Pernambuco (PE)", "Piauí (PI)", "Rio de Janeiro (RJ)", "Rio Grande do Norte (RN)", "Rio Grande do Sul (RS)", "Rondônia (RO)", "Roraima (RR)", "Santa Catarina (SC)", "São Paulo (SP)", "Sergipe (SE)", "Tocantins (TO)") {
			name: "Endereço - Estado"
			request: "Informe a UF na qual está localizado o Vendedor"
			atomic: true
		},
		+[municipio] : String {
			name: "Endereço - Município"
			request: "Informe o município na qual está localizado o Vendedor"
		},
		+[logradouroTipo] : List ("Alameda", "Avenida", "Estrada", "Rua", "Travessa", "Vila") {
			name: "Tipo de Logradouro"
			request: "Indique o tipo de logradouro do endereço do Vendedor"
			atomic: true
		},
		+[logradouro] : String {
			name: "Logradouro"
			request: "Transcreva o logradouro do endereço do Vendedor"
		},
		+[numero] : Integer {
			name: "Número"
		},
		&[complemento] : String {
			name: "Complemento"
			request: "Insira informações complementares"
			help: "apartamento, bloco, quadra, etc."
		}
		+[bairro] : String {
			name: "Bairro"
			request: "Informe o Bairro do Vendedor"
		}
		+[cep] : String where("\d\d\d\d\d-\d\d\d") {
			name: "CEP"
			request: "Insira o CEP da localidade do Vendedor (apenas numeros)"
		},
	+[representante]
		+[nome] : String {
		name: "Nome do Representante Legal"
		request: "Insira o nome do Representante Legal do Vendedor"
		},
		+[nacionalidade] : String {
			name: "Nacionalidade - Representante Legal"
			request: "Informe a nacionalidade do Representante Legal do Vendedor"
			default: "brasileiro(a)"
		},
		+[estadoCivil] : List ("Solteiro(a)", "Casado(a)", "Convivente", "Divorciado(a)", "Viúvo(a)") {
			name = "Estado civil"
			request = "Indique o estado civil"
			atomic = true
		},
		+[profissão] : String {
			name: "Profissão - Representante Legal"
			request: "Informe a profissão do Representante Legal do Vendedor"
			default: "Empresário(a)"
		},
		+[rgNumero] : Integer {
			name: "RG - Representante Legal"
			request: "Insira o RG do Representante Legal do Vendedor (somente números)"
		},
		+[rgEmissor] : String {
			name: "Órgão Emissor do RG - Representante Legal"
			request: "Insira o órgão emissor RG do Representante Legal do Vendedor (somente números)"
		}
		+[cpfNumero] : String where("\d\d\d.\d\d\d.\d\d\d-\d\d") {
			name: "CPF - Representante Legal"
			request: "Insira o CPF do Representante Legal do Vendedor"
		},
<comprador>
	+[nome] : String {
		name = "Comprador"
		request = "Insira nome completo do comprador"
	},
	+[nacionalidade] : String {
		name = "Nacionalidade"
		request = "Insira nacionalidade do comprador"
	},
	+[estadoCivil]: List ("Solteiro", "Casado", "Convivente estável", "Divorciado", Viúvo") {
		name = "Estado civil"
		request = "Indique o estado civil"
		atomic = true
	},
	+[profissao] : String { 
		name = "Profissão"
		request = "Insira profissão do comprador"
	},
	+[rgNumero] : String {
		name = "RG - Comprador"
		request = "Indique o RG do comprador (somente números)"
	},
	+[rgEmissor] : String {
		name: "Órgão Emissor do RG - Comprador"
		request: "Insira o órgão emissor RG do Comprador"
	},
	+[cpf] : String {
		name: "CPF - Comprador"
		request: "Insira o CPF do comprador (somente números)"
	},
	+[endereco]
		+[estado] : List ("Acre (AC)", "Alagoas (AL)", "Amazonas (AM)", "Amapá (AP)", "Bahia (BA)", "Ceará (CE)", "Distrito Federal (DF)", "Espírito Santo (ES)", "Goiás (GO)", "Maranhão (MA)", "Mato Grosso (MT)", "Mato Grosso do Sul (MS)", "Minas Gerais (MG)", "Pará (PA)", "Paraíba (PB)", "Paraná (PR)", "Pernambuco (PE)", "Piauí (PI)", "Rio de Janeiro (RJ)", "Rio Grande do Norte (RN)", "Rio Grande do Sul (RS)", "Rondônia (RO)", "Roraima (RR)", "Santa Catarina (SC)", "São Paulo (SP)", "Sergipe (SE)", "Tocantins (TO)") {
			name: "Endereço - Estado"
			request: "Informe a UF na qual está localizado o Comprador"
			atomic: true
		},
		+[municipio] : String {
			name: "Endereço - Município"
			request: "Informe o município na qual está localizado o Comprador"
		},
		+[logradouroTipo] : List ("Alameda", "Avenida", "Estrada", "Rua", "Travessa", "Vila") {
			name: "Tipo de Logradouro"
			request: "Indique o tipo de logradouro do endereço do Comprador"
			atomic: true
		},
		+[logradouro] : String {
			name: "Logradouro"
			request: "Transcreva o logradouro do endereço do Comprador"
		},
		+[numero] : Integer {
			name: "Número"
		},
		&[complemento] : String {
			name: "Complemento"
			request: "Insira informações complementares"
			help: "apartamento, bloco, quadra, etc."
		}
		+[bairro] : String {
			name: "Bairro"
			request: "Informe o Bairro do Comprador"
		}
		+[cep] : String where("\d\d\d\d\d-\d\d\d") {
			name: "CEP"
			request: "Insira o CEP da localidade do Comprador (apenas numeros)"
		},
	},

+<cao>
	+[quantidade] : Integer {
		name: "Quantidade de Cães"
		request: "Informe a quantidade de cães negociados"
	}
	[raca] : List ("Bulldog Francês", "Golden Retriever", "Labrador Retriever", "Maltês", "Pinscher", "Poodle", "Pug", "Shih-Tzu", "Yorkshire") {
		name: "Raça dos Cães"
		request: "Informe a raça dos cães"
		atomic: true
	}
	+[cor]
	&[pedigree]
	+[microchip]
	+[nascimento]
		+[municipio]
		+[data] : Date {
			name:
			request
		},
	+[prazo]
		+[vacinacao] 
		+[obito]

<preco>
	+[valorTotal]
	+[formaPgto]: List ("À vista", "Parcelado") {
		name = "Forma de pagamento"
		request = "Escolha a forma de pagamento: "
		atomic = true
	}
	if ([formaPgto] == "Parcelado") {
		+[parcelas]: Integer {
			name = "Parcelas"
			request = "Insira o número de parcelas desejado: "
		}
	}
	+[meioPgto]: List ("dinheiro", "cartão", "cheque") {
		name = "Meio de pagamento"
		request = "Selecione o meio de pagamento"
		}
	if ([meioPgto] == "dinheiro") {
		+[dinheiro]: Currency {
		}
	}
	if ([meioPgto] == "cartão") {
		+[cartao]: Struct {
			name = "Cartão"
			request = "Insira as informações de pagamento do cartão: "
			fields { 
				+[numero]: String where ("\d\d\d\d.\d\d\d\d.\d\d\d\d") {
					name = "Número do Cartão"
					request = "Insira o número do cartão: "
				},
				+[bandeira]: String {
					name = "Bandeira do Cartão"
					request = "Indique a bandeira do cartão de crédito: "
				},
				+[parcelas]: Interger {
					name = "Número de parcelas"
					request = "Insira o número de parcelas: "
				}
			}
		}	
	}
	
	if ([meioPgto] == "cheque") {				
		+[cheque] Struct {
			name = "Cheque"
			request = "Insira as informações de pagamento no cheque: "
			fields {
				+[numero]: Currency {
					name = "Número do cheque"
					request = "Insira o número do cheque: "
				}
				+[banco]: String {
					name = "Banco"
					request = "Informe qual o Banco emitente do cheque: "
				}
				+[agencia]: Integer {
					name = "Agência"
					request = "Informe a Agência: "
					help = "Somente em números"
				}
				+[contaCorrente]: Integer {
					name = "Conta Corrente"
					request = "Informe o número da conta coerrente: "
				}
				+[preDatados]: Integer {
					name = "Parcelas"
					request = "Informe a quantidade de parcelas: "
				}
			}
		}
	}


<contratoVias>
	+[contratoVias] : Integer {
		name = "Número de vias"
		request = "Indique o número de vias do contrato expedidas"
	}
<dataExtenso>
	+[dataExtenso] : Date {
	name = "Data"
	request = "Indicar a data de expedição do contrato por extenso"
	}


<testemunha1>
	+[nome] : String {
		name = "Testemunha 1"
		request = "Insira nome completo da Testemunha 1"
	}
	+[rg] : String {
		name = "RG"
		request = "Insira RG da Testemunha 1"
	}

<testemunha2>
	+[nome] : String {
		name = "Testemunha 2"
		request = "Insira nome completo da Testemunha 2"
	}
	+[rg] : String {
		name = "RG"
		request = "Insira RG da Testemunha 2"
	}
